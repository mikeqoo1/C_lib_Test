language: c

env:
  global:
    - LD_LIBRARY_PATH=$HOME/libuv/lib:$LD_LIBRARY_PATH
    - C_INCLUDE_PATH=$HOME/libuv/include:$C_INCLUDE_PATH
matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc USE_CXX=gcc CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-4.9 USE_CXX=gcc-4.9 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
    - os: linux
      dist: trusty
      sudo: required
      env: USE_CC=gcc-6 USE_CXX=gcc-6 CMAKE_BIN=$CMAKE_PREFIX/bin/cmake
# before_install:
#     - sudo add-apt-repository ppa:acooks/libwebsockets6
#     - sudo apt-get update
#     - sudo apt-get install libuv1.dev
install:
  # libuv for Wookie
  - if ! [ -f "$HOME/libuv/include/uv.h" ]; then
      curl -L https://github.com/libuv/libuv/archive/v1.6.1.tar.gz | tar xzf -;
      (cd libuv-1.6.1 && ./autogen.sh && ./configure --prefix=$HOME/libuv && make && make install);
    fi



    #- if [ "$TRAVIS_OS_NAME" == "linux" ] ; then
    #      if [ ! -e "$CMAKE_BIN" ]; then
    #        mkdir -p "$CMAKE_PREFIX";
    #        curl --insecure -L "$CMAKE_LINUX_URL" -o cmake-linux.sh ;
    #        bash cmake-linux.sh --skip-license --prefix=$CMAKE_PREFIX ;
    #      fi
    #  fi
    # wget "https://github.com/libuv/libuv/archive/v1.18.0.tar.gz";
    # tar -zxvf v1.18.0.tar.gz;
    # cd libuv-1.18.0;
    # sh autogen.sh;
    # ./configure;
    # sudo make -j4;
    # sudo make install;
    # ldconfig;

    # before_script:
    #   - REPO_DIR=$PWD;
    #   - cd /tmp
    #   - if [ ! -e "$LIBUV_PREFIX/include/uv.h" ] || [ ! -e "$LIBUV_PREFIX/lib/libuv.so" ] ; then
    #         if [ "$TRAVIS_OS_NAME" == "linux" ] ; then
    #           mkdir -p "$LIBUV_PREFIX";
    #           wget -c "http://dist.libuv.org/dist/v$LIBUV_VERSION/libuv-v$LIBUV_VERSION.tar.gz" -O libuv-v$LIBUV_VERSION.tar.gz;
    #           tar -xvf libuv-v$LIBUV_VERSION.tar.gz;
    #           cd libuv-v$LIBUV_VERSION ;
    #           ./autogen.sh;
    #           ./configure --prefix=$LIBUV_PREFIX --with-pic=yes --enable-shared=yes --enable-static=no;
    #           make -j4 install -Wl ;
    #           cd -;
    #           rm -rf libuv-v$LIBUV_VERSION libuv-v$LIBUV_VERSION ;
    #         fi
    #     fi
    #   - cd "$REPO_DIR";


cache:
  directories:
    - $HOME/libuv


script: CC=$ENV_CC make all && CC=$ENV_CC make libuv && CC=$ENV_CC make libuv2
